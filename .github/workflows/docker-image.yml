name: Build and Push LobeChat Docker Image

on:
  push:
    branches: [main]
    tags: ["v*.*.*"]
  workflow_dispatch:
    inputs:
      skip-tests:
        description: "Skip tests (true/false)"
        required: false
        default: "false"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/lobe-chat
  BUILD_CONTEXT: .
  DOCKERFILE: Dockerfile

jobs:
  build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整提交历史用于版本标签

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Metadata
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=branch
            type=sha

      - name: Run Tests (Optional)
        if: ${{ github.event.inputs.skip-tests != 'true' }}
        run: |
          echo "Running tests..."
          # 这里添加您的测试命令
          # 示例: npm test

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.BUILD_CONTEXT }}
          file: ${{ env.DOCKERFILE }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          build-args: |
            NEXT_PUBLIC_VERCEL_ANALYTICS_ID=${{ secrets.ANALYTICS_ID }}
            NEXT_PUBLIC_UMAMI_WEBSITE_ID=${{ secrets.UMAMI_ID }}
          secrets: |
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}

      - name: Verify Image
        if: ${{ success() }}
        run: |
          echo "Verifying image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}"
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }} --quiet
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }} --version

      - name: Publish to GitHub Packages
        if: ${{ success() && github.event_name != 'pull_request' }}
        uses: actions/upload-artifact@v4
        with:
          name: docker-image-info
          path: |
            ${{ steps.meta.outputs.tags }}
            ${{ steps.meta.outputs.labels }}
          retention-days: 1
