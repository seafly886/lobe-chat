name: Build and Push LobeChat Docker Image

on:
  push:
    branches: [main]
    tags: ["v*.*.*"]
  workflow_dispatch:
    inputs:
      use_cn_mirror:
        description: "Use CN mirror for build (true/false)"
        required: false
        default: "false"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/lobe-chat
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Metadata
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=tag
            type=sha

      - name: Setup Build Args
        id: buildargs
        run: |
          CN_MIRROR_FLAG=${{ inputs.use_cn_mirror || 'false' }}
          echo "USE_CN_MIRROR=$CN_MIRROR_FLAG" >> $GITHUB_ENV
          echo "BUILD_ARGS=--build-arg USE_CN_MIRROR=$CN_MIRROR_FLAG"

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ env.PLATFORMS }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            USE_CN_MIRROR=${{ env.USE_CN_MIRROR }}
            NEXT_PUBLIC_BASE_PATH=${{ secrets.NEXT_PUBLIC_BASE_PATH }}
            NEXT_PUBLIC_SENTRY_DSN=${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
            NEXT_PUBLIC_ANALYTICS_POSTHOG=${{ secrets.NEXT_PUBLIC_ANALYTICS_POSTHOG }}
            NEXT_PUBLIC_POSTHOG_HOST=${{ secrets.NEXT_PUBLIC_POSTHOG_HOST }}
            NEXT_PUBLIC_POSTHOG_KEY=${{ secrets.NEXT_PUBLIC_POSTHOG_KEY }}
            NEXT_PUBLIC_ANALYTICS_UMAMI=${{ secrets.NEXT_PUBLIC_ANALYTICS_UMAMI }}
            NEXT_PUBLIC_UMAMI_SCRIPT_URL=${{ secrets.NEXT_PUBLIC_UMAMI_SCRIPT_URL }}
            NEXT_PUBLIC_UMAMI_WEBSITE_ID=${{ secrets.NEXT_PUBLIC_UMAMI_WEBSITE_ID }}
            FEATURE_FLAGS=${{ secrets.FEATURE_FLAGS }}

      - name: Verify Image
        run: |
          IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
          docker run --rm $IMAGE --version

      - name: Save Image Info
        run: |
          echo "Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}" > image-info.txt
          echo "Tags: ${{ steps.meta.outputs.tags }}" >> image-info.txt
        if: always()

      - name: Upload Image Info
        uses: actions/upload-artifact@v4
        with:
          name: image-metadata
          path: image-info.txt
